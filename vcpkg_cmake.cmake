set(build_tree_root "${CMAKE_BINARY_DIR}")
include(vcpkg_cmake_common.cmake)
include(CMakeParseArguments)

set(__vcpkg_cmake__vcpkg_dir)
set(__vcpkg_cmake__in_block 0)

function (__vcpkg_cmake_canonicalize_path path out_path)
    if (IS_SYMLINK "${path}")
        file (READ_SYMLINK "${path}" path)
        if (NOT IS_ABSOLUTE "${path}")
            get_filename_component(dir "${path}" DIRECTORY)
            set(path "${dir}/${path}")
        endif()
    endif()
    if (NOT IS_ABSOLUTE "${path}")
        set (path "${CMAKE_CURRENT_SOURCE_DIR}/${path}")
    endif()
    set (${out_path} "${path}" PARENT_SCOPE)
endfunction()


function (vcpkg_cmake_begin)

    # TODO: maybe branch/tag support. make it possible to get a pull request branch.
    # this should be possible through the commit hash alone, though, right?

    cmake_parse_arguments(ARG "" "VCPKG_DIR;COMMIT;DEFAULT_TRIPLET;REPO_URL" "" ${ARGN})
    set(__vcpkg_cmake__in_block 1 PARENT_SCOPE)

    # Set unspecified arguments to defaults
    if (NOT ARG_VCPKG_DIR)
        set(ARG_VCPKG_DIR "${CMAKE_SOURCE_DIR}/3rd_party/vcpkg")
    else()
        __vcpkg_cmake_canonicalize_path("${ARG_VCPKG_DIR}" ARG_VCPKG_DIR)
    endif()

    if (NOT ARG_REPO_URL)
        set(ARG_REPO_URL "https://github.com/microsoft/vcpkg.git")
    endif()

    file(WRITE "${__vcpkg_cmake__configuration_file}"
"# Generated by cmake-vcpkg, changes will be overwritten!\n\
[vcpkg]\n\
repo_url=${ARG_REPO_URL}\n\
vcpkg_dir=${ARG_VCPKG_DIR}\n\
default_commit=${ARG_COMMIT}\n\
default_triplet=${ARG_DEFAULT_TRIPLET}\n")
    # In script mode (-P) we don't know CMAKE_BINARY_DIR, so pass it in.
    add_custom_target(update_vcpkg
        COMMAND ${CMAKE_COMMAND} -D build_tree_root=${CMAKE_BINARY_DIR} -P "${__vcpkg_cmake__update_script}"
        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
        VERBATIM)
    set(__vcpkg_cmake__vcpkg_dir "${ARG_VCPKG_DIR}" PARENT_SCOPE)
endfunction()


function (vcpkg_cmake_end)
    set(__vcpkg_cmake__in_block 0 PARENT_SCOPE)
    include("${__vcpkg_cmake__update_script}")
    set(CMAKE_TOOLCHAIN_FILE "${__vcpkg_cmake__vcpkg_dir}/scripts/buildsystems/vcpkg.cmake" CACHE STRING "" FORCE)
endfunction()


function (vcpkg_cmake_package package_name)
    if (NOT __vcpkg_cmake__in_block)
        message(FATAL_ERROR "vcpkg_cmake_package: called outside of vcpkg_cmake block!")
    endif()
    if (NOT package_name)
        message(FATAL_ERROR "vcpkg_cmake_package: package name must be specified!")
    endif()
    # cmake_parse_arguments(<prefix> <options> <one_value_keywords> <multi_value_keywords> argsâ€¦)
    cmake_parse_arguments(ARG "" "TRIPLET;COMMIT" "" ${ARGN})
    file(APPEND "${__vcpkg_cmake__configuration_file}"
"\n[${package_name}]\n\
triplet=${ARG_TRIPLET}\n\
commit_hash=${ARG_COMMIT}\n")
endfunction()
